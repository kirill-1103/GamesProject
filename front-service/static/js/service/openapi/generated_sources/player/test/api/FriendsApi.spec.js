/**
 * API Title
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiTitle);
  }
}(this, function(expect, ApiTitle) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiTitle.FriendsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FriendsApi', function() {
    describe('acceptFriendRequest', function() {
      it('should call acceptFriendRequest successfully', function(done) {
        //uncomment below and update the code to test acceptFriendRequest
        //instance.acceptFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFriends', function() {
      it('should call getFriends successfully', function(done) {
        //uncomment below and update the code to test getFriends
        //instance.getFriends(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getReceivedFriendRequest', function() {
      it('should call getReceivedFriendRequest successfully', function(done) {
        //uncomment below and update the code to test getReceivedFriendRequest
        //instance.getReceivedFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSentFriendRequest', function() {
      it('should call getSentFriendRequest successfully', function(done) {
        //uncomment below and update the code to test getSentFriendRequest
        //instance.getSentFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectFriendRequest', function() {
      it('should call rejectFriendRequest successfully', function(done) {
        //uncomment below and update the code to test rejectFriendRequest
        //instance.rejectFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removeFriend', function() {
      it('should call removeFriend successfully', function(done) {
        //uncomment below and update the code to test removeFriend
        //instance.removeFriend(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revokeFriendRequest', function() {
      it('should call revokeFriendRequest successfully', function(done) {
        //uncomment below and update the code to test revokeFriendRequest
        //instance.revokeFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendFriendRequest', function() {
      it('should call sendFriendRequest successfully', function(done) {
        //uncomment below and update the code to test sendFriendRequest
        //instance.sendFriendRequest(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
